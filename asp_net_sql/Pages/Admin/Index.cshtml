@page "{DbSetTEntityName}"

@using System.Reflection;

@using asp_net_sql.Models
@using asp_net_sql.Pages
@model Admin_IndexModel

@{
    var selfName = Model.DbSetTEntityName;
    ViewData["Title"] = $"{selfName} List";
    var DbSetNames = Model.DbSetInfo.Keys.ToList();
    var DbSetPropInfo = Model.ViewDataGen.DbSetPropInfo;

    if (DbSetNames == null || DbSetPropInfo == null)
    {
        ViewData["Result"] = new Result(
            Result.ResType.Error,
            new Dictionary<string, string[]> {
                {
                    "Razor.Admin_IndexModel",
                    new string[] { "ViewData missing" }
                }
            });
        return;
    }

    var row = -1;
    var allProps = string.Join(",", DbSetPropInfo.Select(pInf => pInf.Name));
}

<h1>@selfName List</h1>

<menu id="adminMenu">
    @foreach (var menuItem in DbSetNames)
    {
        var cls = menuItem == selfName ? "menu selected" : "menu";
        <a class="@cls" href="./@menuItem">@menuItem</a>
    }
</menu>

<form method="post">
    <table class="table">
        <thead>
            <tr>
                @foreach (var pInf in DbSetPropInfo)
                {
                    <th>@pInf.Name</th>
                }
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @{
                // var items = Convert.ChangeType
                //   (Model.AsyncDbSetItemsGen, Model.AsyncDbSetItemsGen.GetType());

                var items = Model.ViewDataGen.AsyncDbSetItems ?? [];
                foreach (var item in (dynamic)items)
                {
                    row++;
                    var btnId = $"btn_{row}";
                        <tr>
                            @foreach (var pInf in DbSetPropInfo)
                        {
                            var inpId = $"inp_{pInf.Name}_{row}";
                            <td>
                                <input id="@inpId" type="text" value="@pInf.GetValue(item)" />
                            </td>
                        }
                            <td>
                                <button id="@btnId"
                                        type="submit"
                                        asp-page-handler="Update">
                                    Change (Post)
                                </button>
                            </td>
                        </tr>
                }
            }
        </tbody>
    </table>
</form>

<!-- DYNAMICALLY ADD OLD VALUES HIDDEN INPUT FIELDS TO THE FORM -->

<script type="module">
    window.addEventListener('load', () => {

        const propArr = "@allProps".split(',');

        // const appendFormaction = (row, suf, btn) => {
        //     let fa = "";
        //     for (const pr of propArr) {
        //         const inp = document.getElementById(`inp_${pr}_${row}`);
        //         fa += `&${pr}${suf}=${encodeURI(inp.value)}`;
        //     }
        //     const attr = btn.getAttribute('formaction');
        //     btn.setAttribute('formaction', attr + fa);
        // }

        for (let row = 0; row < @row; row++) {

            const btn = document.getElementById(`btn_${row}`);

           // appendFormaction(row, '_old', btn);

            btn.addEventListener('click', evt => {
                evt.preventDefault();
               // appendFormaction(row, '_new', btn);
            });
        }
    });
</script>
