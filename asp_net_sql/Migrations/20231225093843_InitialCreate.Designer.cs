// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp_net_sql.Data;

#nullable disable

namespace asp_net_sql.Migrations
{
    [DbContext(typeof(TicTacToe_Context))]
    [Migration("20231225093843_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("asp_net_sql.Models.Chosen", b =>
                {
                    b.Property<int>("RosterID")
                        .HasColumnType("int");

                    b.Property<int?>("UISide")
                        .HasColumnType("int");

                    b.HasKey("RosterID")
                        .HasName("PK_Chn_RID");

                    b.HasIndex("UISide");

                    b.ToTable("Chosen", (string)null);
                });

            modelBuilder.Entity("asp_net_sql.Models.EnumBtnMsg", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("ID")
                        .HasName("PK_EBM_ID");

                    b.ToTable("EnumBtnMsg", (string)null);
                });

            modelBuilder.Entity("asp_net_sql.Models.EnumGameRoster", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("IDX")
                        .HasColumnType("int");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.HasKey("ID")
                        .HasName("PK_EGR_ID");

                    b.HasIndex(new[] { "Origin", "IDX" }, "UQ_EGR_Ent")
                        .IsUnique();

                    b.ToTable("EnumGameRoster", null, t =>
                        {
                            t.HasCheckConstraint("CK_EGR_Origin", "Origin IN ('None', 'Human', 'AI')");
                        });
                });

            modelBuilder.Entity("asp_net_sql.Models.EnumGameState", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("ID")
                        .HasName("PK_EGS_ID");

                    b.ToTable("EnumGameStates");
                });

            modelBuilder.Entity("asp_net_sql.Models.EnumUISide", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("ID")
                        .HasName("PK_EUS_ID");

                    b.ToTable("EnumUISides", t =>
                        {
                            t.HasCheckConstraint("CK_EUS_Value", "[Value] IN ('None', 'Left', 'Right')");
                        });
                });

            modelBuilder.Entity("asp_net_sql.Models.Game", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<int>("TurnWheelHead")
                        .HasColumnType("int");

                    b.HasKey("ID")
                        .HasName("PK_Gms_ID");

                    b.HasIndex("State");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("asp_net_sql.Models.GameBoard", b =>
                {
                    b.Property<int>("Row")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Row"));

                    b.Property<int?>("Col1")
                        .HasColumnType("int");

                    b.Property<int?>("Col2")
                        .HasColumnType("int");

                    b.Property<int?>("Col3")
                        .HasColumnType("int");

                    b.HasKey("Row")
                        .HasName("PK_GBr_ID");

                    b.HasIndex("Col1");

                    b.HasIndex("Col2");

                    b.HasIndex("Col3");

                    b.ToTable("GameBoard", (string)null);
                });

            modelBuilder.Entity("asp_net_sql.Models.MenuString", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDX")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("ID")
                        .HasName("PK_MnS_ID");

                    b.HasIndex("ParentID");

                    b.ToTable("MenuStrings");
                });

            modelBuilder.Entity("asp_net_sql.Models.ResxString", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Value")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("ID")
                        .HasName("PK_RxS_ID");

                    b.ToTable("ResxStrings");
                });

            modelBuilder.Entity("asp_net_sql.Models.Chosen", b =>
                {
                    b.HasOne("asp_net_sql.Models.EnumGameRoster", "Roster")
                        .WithOne("Chosen")
                        .HasForeignKey("asp_net_sql.Models.Chosen", "RosterID")
                        .IsRequired()
                        .HasConstraintName("FK_EGR_ID__Chn_RID");

                    b.HasOne("asp_net_sql.Models.EnumUISide", "UISideNavigation")
                        .WithMany("Chosens")
                        .HasForeignKey("UISide")
                        .HasConstraintName("FK_EUS_Val__Chn_USd");

                    b.Navigation("Roster");

                    b.Navigation("UISideNavigation");
                });

            modelBuilder.Entity("asp_net_sql.Models.Game", b =>
                {
                    b.HasOne("asp_net_sql.Models.EnumGameState", "StateNavigation")
                        .WithMany("Games")
                        .HasForeignKey("State")
                        .HasConstraintName("FK_Gms_ID__EGS_Val");

                    b.Navigation("StateNavigation");
                });

            modelBuilder.Entity("asp_net_sql.Models.GameBoard", b =>
                {
                    b.HasOne("asp_net_sql.Models.EnumGameRoster", "Col1Navigation")
                        .WithMany("GameBoardCol1Navigations")
                        .HasForeignKey("Col1")
                        .HasConstraintName("FK_GBr_Col1__EGR_ID");

                    b.HasOne("asp_net_sql.Models.EnumGameRoster", "Col2Navigation")
                        .WithMany("GameBoardCol2Navigations")
                        .HasForeignKey("Col2")
                        .HasConstraintName("FK_GBr_Col2__EGR_ID");

                    b.HasOne("asp_net_sql.Models.EnumGameRoster", "Col3Navigation")
                        .WithMany("GameBoardCol3Navigations")
                        .HasForeignKey("Col3")
                        .HasConstraintName("FK_GBr_Col3__EGR_ID");

                    b.Navigation("Col1Navigation");

                    b.Navigation("Col2Navigation");

                    b.Navigation("Col3Navigation");
                });

            modelBuilder.Entity("asp_net_sql.Models.MenuString", b =>
                {
                    b.HasOne("asp_net_sql.Models.MenuString", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentID")
                        .HasConstraintName("FK_MnS_ID__MnS_ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("asp_net_sql.Models.EnumGameRoster", b =>
                {
                    b.Navigation("Chosen");

                    b.Navigation("GameBoardCol1Navigations");

                    b.Navigation("GameBoardCol2Navigations");

                    b.Navigation("GameBoardCol3Navigations");
                });

            modelBuilder.Entity("asp_net_sql.Models.EnumGameState", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("asp_net_sql.Models.EnumUISide", b =>
                {
                    b.Navigation("Chosens");
                });

            modelBuilder.Entity("asp_net_sql.Models.MenuString", b =>
                {
                    b.Navigation("InverseParent");
                });
#pragma warning restore 612, 618
        }
    }
}
